vim.cmd.highlight('clear')
vim.g.colors_name = 'darksphere'

local hi = function(name, val)
  val.force = true
  val.cterm = val.cterm or {} ---@type vim.api.keyset.highlight
  vim.api.nvim_set_hl(0, name, val)
end

--stylua: ignore start

-- General UI
hi('Normal',         { fg = '#d6d6dd', bg = '#181818' })
hi('Conceal',        { fg = '#7a797a', bg = '#181818' })
hi('Cursor',         { fg = '#181818', bg = '#d6d6dd' })
hi('lCursor',        { fg = '#181818', bg = '#d6d6dd' })
hi('ColorColumn',    { bg = '#292929' })
hi('CursorColumn',   { bg = '#292929' })
hi('CursorLine',     { bg = '#292929' })
hi('CursorLineNr',   { fg = '#c2c2c2', bold = true })
hi('LineNr',         { fg = '#535353' })
hi('LineNrAbove',    { link = 'LineNr' })
hi('LineNrBelow',    { link = 'LineNr' })
hi('VertSplit',      { fg = '#383838', bg = '#181818' })
hi('WinSeparator',   { fg = '#383838', bg = '#181818' })
hi('EndOfBuffer',    { fg = '#181818' })
hi('FoldColumn',     { fg = '#d6d6dd', bg = '#181818' })
hi('Folded',         { fg = '#d6d6dd', bg = '#292929' })
hi('SignColumn',     { fg = '#d6d6dd', bg = '#181818' })
hi('NonText',        { fg = '#7a797a' })
hi('Whitespace',     { fg = '#737373' })
hi('Pmenu',          { fg = '#d6d6dd', bg = '#1d1d1d' })
hi('PmenuSel',       { fg = '#d6d6dd', bg = '#163761' })
hi('PmenuSbar',      { bg = '#383838' })
hi('PmenuThumb',     { bg = '#676767' })
hi('StatusLine',     { fg = '#d6d6dd', bg = '#181818', bold = true })
hi('StatusLineNC',   { fg = '#7a797a', bg = '#181818' })
hi('TabLine',        { fg = '#d6d6dd', bg = '#292929' })
hi('TabLineFill',    { bg = '#181818' })
hi('TabLineSel',     { fg = '#d6d6dd', bg = '#181818', bold = true })
hi('WinBar',         { fg = '#d6d6dd', bg = '#181818', bold = true })
hi('WinBarNC',       { fg = '#7a797a', bg = '#181818' })
hi('WildMenu',       { fg = '#181818', bg = '#228df2' })
hi('MsgSeparator',   { fg = '#d6d6dd', bg = '#181818' })
hi('NormalFloat',    { fg = '#d6d6dd', bg = '#1d1d1d' })
hi('FloatBorder',    { fg = '#383838', bg = '#1d1d1d' })
hi('FloatTitle',     { fg = '#d6d6dd', bg = '#1d1d1d', bold = true })
hi('FloatFooter',    { fg = '#d6d6dd', bg = '#1d1d1d', bold = true })
hi('FloatShadow',    { bg = '#111111', blend = 80 })
hi('FloatShadowThrough', { bg = '#111111', blend = 100 })
hi('Visual',         { fg = '#d6d6dd', bg = '#163761' })
hi('VisualNOS',      { fg = '#d6d6dd', bg = '#163761' })
hi('Search',         { fg = '#d6d6dd', bg = '#163764' })
hi('IncSearch',      { fg = '#181818', bg = '#e5b95c', bold = true })
hi('CurSearch',      { link = 'Search' })
hi('Substitute',     { fg = '#181818', bg = '#e5b95c', bold = true })
hi('MatchParen',     { bg = '#163761' })
hi('QuickFixLine',   { fg = '#d6d6dd', bg = '#163761' })
hi('CursorLineSign', { link = 'SignColumn' })
hi('CursorLineFold', { link = 'FoldColumn' })
hi('DiffAdd',        { bg = '#83d6c5' })
hi('DiffChange',     { bg = '#e5b95c' })
hi('DiffDelete',     { bg = '#f14c4c' })
hi('DiffText',       { bg = '#228df2', bold = true })
hi('DiffTextAdd',    { link = 'DiffText' })
hi('ErrorMsg',       { fg = '#f14c4c', bg = '#1d1d1d', bold = true })
hi('WarningMsg',     { fg = '#ea7620', bg = '#1d1d1d', bold = true })
hi('MoreMsg',        { fg = '#15ac91', bg = '#1d1d1d', bold = true })
hi('Question',       { fg = '#15ac91', bg = '#1d1d1d', bold = true })
hi('Directory',      { fg = '#4c9df3', bg = '#181818' })
hi('SpecialKey',     { fg = '#4c9df3' })
hi('Title',          { fg = '#aaa0fa', bold = true })
hi('Underlined',     { fg = '#228df2', underline = true })
hi('Ignore',         { fg = '#181818' })
hi('Todo',           { fg = '#f8c762', bg = '#181818', bold = true })
hi('Error',          { fg = '#f14c4c', bg = '#1d1d1d', bold = true })

-- Spell
hi('SpellBad',   { sp = '#f14c4c', undercurl = true })
hi('SpellCap',   { sp = '#4c9df3', undercurl = true })
hi('SpellLocal', { sp = '#15ac91', undercurl = true })
hi('SpellRare',  { sp = '#e567dc', undercurl = true })

-- Diagnostics
hi('DiagnosticError',   { fg = '#f14c4c' })
hi('DiagnosticWarn',    { fg = '#ea7620' })
hi('DiagnosticInfo',    { fg = '#228df2' })
hi('DiagnosticHint',    { fg = '#15ac91' })
hi('DiagnosticOk',      { fg = '#15ac91' })
hi('DiagnosticUnderlineError', { sp = '#f14c4c', underline = true })
hi('DiagnosticUnderlineWarn',  { sp = '#ea7620', underline = true })
hi('DiagnosticUnderlineInfo',  { sp = '#228df2', underline = true })
hi('DiagnosticUnderlineHint',  { sp = '#15ac91', underline = true })
hi('DiagnosticUnderlineOk',    { sp = '#15ac91', underline = true })
hi('DiagnosticVirtualTextError', { fg = '#f14c4c' })
hi('DiagnosticVirtualTextWarn',  { fg = '#ea7620' })
hi('DiagnosticVirtualTextInfo',  { fg = '#228df2' })
hi('DiagnosticVirtualTextHint',  { fg = '#15ac91' })
hi('DiagnosticVirtualTextOk',    { fg = '#15ac91' })
hi('DiagnosticFloatingError',    { link = 'DiagnosticError' })
hi('DiagnosticFloatingWarn',     { link = 'DiagnosticWarn' })
hi('DiagnosticFloatingInfo',     { link = 'DiagnosticInfo' })
hi('DiagnosticFloatingHint',     { link = 'DiagnosticHint' })
hi('DiagnosticFloatingOk',       { link = 'DiagnosticOk' })
hi('DiagnosticSignError',        { fg = '#f14c4c', bg = '#181818' })
hi('DiagnosticSignWarn',         { fg = '#ea7620', bg = '#181818' })
hi('DiagnosticSignInfo',         { fg = '#228df2', bg = '#181818' })
hi('DiagnosticSignHint',         { fg = '#15ac91', bg = '#181818' })
hi('DiagnosticSignOk',           { fg = '#15ac91', bg = '#181818' })
hi('DiagnosticDeprecated',       { sp = '#f14c4c', strikethrough = true })
hi('DiagnosticUnnecessary',      { link = 'Comment' })

-- LSP
hi('LspInlayHint', { fg = '#838383', bg = '#2b2b2b' })
hi('SnippetTabstop', { link = 'Visual' })

-- Floating windows
hi('NormalFloat', { fg = '#d6d6dd', bg = '#1d1d1d' })

-- Treesitter/semantic tokens
hi('@markup.raw',       { fg = '#e394dc' })
hi('@markup.link',      { fg = '#228df2', underline = true })
hi('@markup.heading',   { fg = '#d6d6dd', bold = true })
hi('@markup.link.url',  { fg = '#228df2', underline = true })
hi('@markup.underline', { fg = '#228df2', underline = true })
hi('@comment.todo',     { fg = '#f8c762', bold = true })
hi('@comment',          { fg = '#6d6d6d', italic = true })
hi('@punctuation',      { fg = '#d6d6dd' })

-- Constants
hi('@constant',         { fg = '#ebc88d' })
hi('@constant.builtin', { fg = '#f8c762' })
hi('@constant.macro',   { fg = '#f8c762' })
hi('@keyword.directive',{ fg = '#a8cc7c' })
hi('@string',           { fg = '#e394dc' })
hi('@string.escape',    { fg = '#d6d6dd' })
hi('@string.special',   { fg = '#e394dc' })
hi('@character',        { fg = '#aaa0fa' })
hi('@character.special',{ fg = '#e394dc' })
hi('@number',           { fg = '#ebc88d' })
hi('@boolean',          { fg = '#82d2ce' })
hi('@number.float',     { fg = '#ebc88d' })

-- Functions
--hi('@function',                   { fg = '#efb080' })
--hi('@function.builtin',           { fg = '#aaa0fa' })
hi('@function',                   { fg = '#aaa0fa' })
hi('@function.builtin',           { fg = '#efb080' })
hi('@function.macro',             { fg = '#f8c762' })
--hi('@function.method',            { fg = '#efb080' })
hi('@function.method',            { fg = '#aaa0fa' })
hi('@variable.parameter',         { fg = '#d6d6dd' })
hi('@variable.parameter.builtin', { fg = '#aaa0fa' })
hi('@variable.member',            { fg = '#aa9bf5' })
hi('@property',                   { fg = '#aa9bf5' })
hi('@attribute',                  { fg = '#f8c762' })
hi('@attribute.builtin',          { fg = '#f8c762' })
--hi('@constructor',                { fg = '#efb080' })
hi('@constructor',                { fg = '#aa9bf5' })

-- Keywords
hi('@keyword.conditional', { fg = '#83d6c5' })
hi('@keyword.repeat',      { fg = '#83d6c5' })
hi('@keyword.type',        { fg = '#efb080' })
hi('@label',               { fg = '#efb080' })
hi('@operator',            { fg = '#d6d6dd' })
hi('@keyword',             { fg = '#83d6c5' })
hi('@keyword.exception',   { fg = '#83d6c5' })

hi('@variable',          { fg = '#d6d6dd' })
hi('@type',              { fg = '#efb080' })
hi('@type.definition',   { fg = '#efb080' })
--hi('@module',            { fg = '#efb080' })
hi('@keyword.import',    { fg = '#a8cc7c' })
hi('@keyword.directive', { fg = '#a8cc7c' })
hi('@keyword.debug',     { fg = '#83d6c5' })
hi('@tag',               { fg = '#af9cff' })
hi('@tag.builtin',       { fg = '#af9cff' })

-- LSP semantic tokens
hi('@lsp.type.class',         { fg = '#efb080' })
hi('@lsp.type.comment',       { fg = '#6d6d6d', italic = true })
hi('@lsp.type.decorator',     { fg = '#a8cc7c' })
hi('@lsp.type.enum',          { fg = '#efb080' })
hi('@lsp.type.enumMember',    { fg = '#ebc88d' })
hi('@lsp.type.function',      { fg = '#efb080' })
hi('@lsp.type.interface',     { fg = '#efb080' })
hi('@lsp.type.macro',         { fg = '#f8c762' })
hi('@lsp.type.method',        { fg = '#efb080' })
hi('@lsp.type.namespace',     { fg = '#d1d1d1' })
hi('@lsp.type.parameter',     { fg = '#d6d6dd' })
hi('@lsp.type.property',      { fg = '#aa9bf5' })
hi('@lsp.type.struct',        { fg = '#efb080' })
hi('@lsp.type.type',          { fg = '#efb080' })
hi('@lsp.type.typeParameter', { fg = '#efb080' })
hi('@lsp.type.variable',      { fg = '#d6d6dd' })

hi('Statement',               { fg = '#efb080'})
-- End of stylua: ignore
